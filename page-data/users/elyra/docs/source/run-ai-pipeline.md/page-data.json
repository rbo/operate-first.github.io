{"componentChunkName":"component---src-templates-markdown-js","path":"/users/elyra/docs/source/run-ai-pipeline.md","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"markdownRemark":{"id":"96e6c4dc-13b5-5a06-9d21-6f7b6cee2c7a","html":"<h1 id=\"how-to-run-an-ai-pipeline-with-elyra\" style=\"position:relative;\"><a href=\"#how-to-run-an-ai-pipeline-with-elyra\" aria-label=\"how to run an ai pipeline with elyra permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How to run an AI Pipeline with Elyra</h1>\n<ol class=\"pf-c-list\">\n<li>Access the <a href=\"https://github.com/elyra-ai/elyra\">Elyra</a> UI by opening the <code class=\"language-text\">*.pipeline</code> file you created in the previous step. Click the “Run” button in the upper left of the UI to start the AI Pipeline.</li>\n</ol>\n<div style=\"text-align:center\">\n<img alt=\"Elyra AI Pipeline play\" src=\"https://raw.githubusercontent.com/thoth-station/elyra-aidevsecops-tutorial/master/docs/images/PlayAIPipeline.png\">\n</div>\n<ol start=\"2\" class=\"pf-c-list\">\n<li>After clicking “Run”, you will be presented with a dialogue box where you need to select which runtime environments to use as well as add a name for your pipeline. Click “OK” to submit your pipeline.</li>\n</ol>\n<div style=\"text-align:center\">\n<img alt=\"Elyra AI Pipeline run inputs\" src=\"https://raw.githubusercontent.com/thoth-station/elyra-aidevsecops-tutorial/master/docs/images/AIPipelineRunInputs.png\">\n</div>\n<ol start=\"3\" class=\"pf-c-list\">\n<li>Now your pipeline has been submitted, move to the <a href=\"http://istio-ingressgateway-istio-system.apps.zero.massopen.cloud/pipeline/#/experiments\">Kubeflow Pipeline UI</a> to see what is happening.</li>\n</ol>\n<div style=\"text-align:center\">\n<img alt=\"Kubeflow Pipeline UI\" src=\"https://raw.githubusercontent.com/thoth-station/elyra-aidevsecops-tutorial/master/docs/images/KFPUI.png\">\n</div>\n<ol start=\"4\" class=\"pf-c-list\">\n<li>From here you can check the status of each step in the pipeline directly from the UI and debug from the logs if any problems occur.</li>\n</ol>\n<div style=\"text-align:center\">\n<img alt=\"Successfull Kubeflow Pipeline\" src=\"https://raw.githubusercontent.com/thoth-station/elyra-aidevsecops-tutorial/master/docs/images/SuccessfullKubeflowPipeline.png\">\n</div>\n<p>Once the pipeline completes successfully, the model is stored in your bucket. You can check from your terminal with the <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html\">aws CLI</a> using the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  aws s3 --profile moc-pipeline-kfp --endpoint https://s3-openshift-storage.apps.zero.massopen.cloud/ <span class=\"token function\">ls</span> s3://<span class=\"token punctuation\">{</span>your_bucket<span class=\"token punctuation\">}</span>/<span class=\"token punctuation\">{</span>your_project_name<span class=\"token punctuation\">}</span>/models/</code></pre></div>\n<p>where <code class=\"language-text\">moc-pipeline-kfp</code> is the aws profile containing <code class=\"language-text\">AWS_ACCESS_KEY_ID</code> and <code class=\"language-text\">AWS_SECRET_ACCESS_KEY</code> to access your bucket.</p>\n<h2 id=\"additional-resources\" style=\"position:relative;\"><a href=\"#additional-resources\" aria-label=\"additional resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Additional Resources</h2>\n<p>For more examples on how to create AI pipelines with Elyra, you can use this <a href=\"https://github.com/elyra-ai/examples/tree/master/pipelines/hello_world_kubeflow_pipelines\">link</a>.</p>\n<h2 id=\"next-step\" style=\"position:relative;\"><a href=\"#next-step\" aria-label=\"next step permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next Step</h2>\n<p><a href=\"/operate-first.github.io/docs/source/deploy-model.md\">Deploy your model</a></p>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul class=\"pf-c-list\">\n<li><a href=\"https://github.com/elyra-ai/elyra\">Elyra</a></li>\n</ul>","fields":{"srcLink":"https://github.com/thoth-station/elyra-aidevsecops-tutorial/blob/master/docs/source/run-ai-pipeline.md"},"frontmatter":{"title":"","description":null,"extraClasses":null}}},"pageContext":{"id":"96e6c4dc-13b5-5a06-9d21-6f7b6cee2c7a"}},"staticQueryHashes":["117426894","3000541721","3606484676","533861647"]}